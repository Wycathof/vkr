import pandas as pd
import telebot
from telebot import types
import zipfile

import work_with_cvs
# from pyunpack import Archive

from work_with_cvs import *

bot = telebot.TeleBot('5944321076:AAErW98ZKZUm-D8zMpxqtCbMF6JF_DMQlHA')
#356883896 - –∫–∞—Ç—è
# 6268363941 - —è
user_white_list = [6268363941, 315540688]
check = False
password = False
block = False


@bot.message_handler(commands=['start'])
def start(message):
    global check
    user_id = message.from_user.id
    print(user_id, message.from_user.username)
    if user_id in user_white_list:
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton(text="–ü–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–±–æ—Ä–∞ –ø–∞—Ä–æ–ª—è")
        btn2 = types.KeyboardButton(text="–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –£–ó")
        kb.add(btn1, btn2)

        bot.send_message(message.chat.id, "–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø! –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã üòé", reply_markup=kb)
        bot.send_message(message.chat.id, "–ï—Å–ª–∏ –∑–Ω–∞–µ—Ç–µ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º, —Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞.\n–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: /help")

        check = True
    else:
        kb = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é ü§°', url="https://t.me/qumin163")
        kb.add(btn1)
        bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.\n–í–∞—à ID: {user_id}", reply_markup=kb)

@bot.message_handler(commands=['help'])
def help(message):
    user_id = message.from_user.id
    if user_id in user_white_list:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –î–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º–∏ –ò–ë.\n–ß—Ç–æ–±—ã —è —Å–º–æ–≥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤—ã–≥—Ä—É–∑–∫—É, —Ç–æ –æ—Ç–ø—Ä–∞–≤—å –µ—ë –≤ –º–µ–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>.csv</b>. –ï—Å–ª–∏ –∂–µ –æ–Ω–∞ –æ—á–µ–Ω—å –±–æ–ª—å—à–∞—è (<b>>20MB</b>), —Ç–æ –∑–∞–ø–∞–∫—É–π –µ—ë –≤ <b>.zip</b> –∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—Ä–∏—Å—ã–ª—ã–π –º–Ω–µ.\n–Ø —Å–º–æ–≥—É –µ–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å ü§ñ",
                         parse_mode='html')
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤—ã–±–µ—Ä–∏ –Ω–∏–∂–µ –∫–∞–∫–æ–π —Ç–∏–ø –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ —Ç—ã —Ö–æ—áe—à—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å ‚¨á\n(–ï—Å–ª–∏ –∫–Ω–æ–ø–æ—á–µ–∫ –Ω–µ—Ç, —Ç–æ –∂–º–∏ /start)")
    else:
        kb = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é ü§°', url="https://t.me/qumin163")
        kb.add(btn1)
        bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.\n–í–∞—à ID: {user_id}",
                         reply_markup=kb)


@bot.message_handler(content_types=['text'])
def message_reply(message):
    global password
    global block
    user_id = message.from_user.id
    if user_id in user_white_list:
        if message.text == '–ü–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–±–æ—Ä–∞ –ø–∞—Ä–æ–ª—è':
            password = True
            block = False
            bot.send_message(message.chat.id, "–ï–±–ª–∞–Ω1")


        elif message.text == '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –£–ó':
            block = True
            password = False
            bot.send_message(message.chat.id, "–ï–±–ª–∞–Ω2")
    else:
        kb = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é ü§°', url="https://t.me/qumin163")
        kb.add(btn1)
        bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.\n–í–∞—à ID: {user_id}", reply_markup=kb)



@bot.message_handler(content_types=['document'])
def document(message):
    user_id = message.from_user.id
    if user_id in user_white_list:
        try:
            chat_id = message.chat.id

            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            name_file = message.document.file_name
            print('file name: ' + name_file)

            path = 'C:/Users/ArVip/Desktop/1/' + name_file

            print('path: ' + path)
            with open(path, 'wb') as new_file:
                new_file.write(downloaded_file)

            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π, —è —Å–æ—Ö—Ä–∞–Ω—é —ç—Ç–æ")

            print('executing main')
            if password:
                bot.send_message(message.chat.id, pizda5())
            elif block:
                bot.send_message(message.chat.id, main(path))
            # if not (".csv" in name_file):
            #     Archive(src).extractall(path)

            # stories_zip = zipfile.ZipFile(src)
            # for file in stories_zip.namelist():
            #     bot.send_message(message.chat.id, {stories_zip.getinfo(file).filename})

            # bot.send_message(message.chat.id, {name_file})
            # bot.send_message(message.chat.id, len)


        except pd.errors.ParserError:
            bot.reply_to(message, "–ù–µ –º–æ–≥—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏.\n –Ø –ø—Ä–∏–Ω–∏–º–∞—é .csv –∏–ª–∏ .zip")

        except Exception as e:
            bot.reply_to(message, e)



    else:
        kb = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é ü§°', url="https://t.me/qumin163")
        kb.add(btn1)
        bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.\n–í–∞—à ID: {user_id}", reply_markup=kb)


print('BOT STARTED')
bot.polling(none_stop=True)
